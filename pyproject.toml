[tool.poetry]
name = "toggl-api-wrapper"
version = "0.1.0"
description = "Simple Toggl API wrapper for non-premium features."
authors = ["David Kasakaitis <davidkasakaitis@proton.me>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Typing :: Typed",
]
packages = [
    { include = "toggl_api" },
]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.27.0"
sqlalchemy = "^2.0.30"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-env = "^1.1.3"
pytest-order = "^1.2.1"
coverage = "^7.5.1"
tox-gh-actions = "^3.2.0"
pytest-httpx = "^0.30.0"
pytest-sqlalchemy-mock = "^0.1.6"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
pymdown-extensions = "^10.8.1"
markdown = "^3.6"
markdown-callouts = "^0.4.0"
mdx-gh-links = "^0.4"
mkdocs-click = "^0.8.1"
mkdocs-redirects = "^1.2.1"
mkdocs-autorefs = "^1.0.1"
mkdocs-literate-nav = "^0.6.1"
mkdocstrings = "^0.25.1"
mkdocs-simple-hooks = "^0.1.5"
mkdocs-material = "^9.5.24"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
test = ["pytest"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "FA",
  'ISC',
  "ICN",
  "G",
  'INP',
  'PIE',
  "T20",
  'PYI',
  'PT',
  "Q",
  "RSE",
  "RET",
  "SLF",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "INT",
  "PTH",
  "ERA",
  "PD",
  "PGH",
  "PL",
  "TRY",
  "FLY",
  "NPY",
  "AIR",
  "PERF",
  "FURB",
  "LOG",
  "RUF",
]
ignore = [
  "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
  "SIM102", # sometimes it's better to nest
  "UP007", # Useless `typing` imports
  "N802",
  "PLW2901",
  "UP017", # Python 3.10 backwards compatiblity

]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
ignore_missing_imports = true
ignore_no_redef = true

[tool.pytest.ini_options]
# pythonpath = [
#   "."
# ]
markers = [
    "unit: Basic unit tests using local cache.",
    "integration: Tests that actively use the API.",
    "slow: Tests that are slow to run or have delays included.",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = ruff, mypy, py310, py311, py312, py313

[testenv]
skip_install = true
passenv = *
setenv = 
    TOGGL_WORKSPACE_ID = {env:TOGGL_WORKSPACE_ID}
    TOGGL_API_TOKEN = {env:TOGGL_API_TOKEN}
    PYTHONPATH = {toxinidir}

allowlist_externals = poetry
commands_pre = 
    poetry install
commands = 
    poetry run pytest {posargs}

[gh-actions]
python = 
    3.10: py310
    3.11: py311
    3.12: ruff, mypy, py312
    3.13: py313

[testenv:mypy]
allowlist_externals = mypy, poetry
basepython = python3.12
commands = mypy toggl_api

[testenv:ruff]
allowlist_externals = ruff, poetry
basepython = python3.12
commands = ruff check toggl_api
"""
